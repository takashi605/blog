name: "e2e テスト,api テストの実行"

on:
  pull_request:
    branches:
      - "main"
      - "develop"

env:
  NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME: ${{ secrets.NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME }}
  NEXT_PUBLIC_CLOUDINARY_API_KEY: ${{ secrets.NEXT_PUBLIC_CLOUDINARY_API_KEY }}
  CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}


jobs:
  e2e:
    runs-on: ubuntu-latest

    steps:
      # 普通に実行すると各種ツールのインストールや DockerImage の読み込みでリソース不足に陥るため、
      # 以下のアクションで事前にディスク領域を解放
      - name: "action の実行環境のディスク領域を解放"
        uses: jlumbroso/free-disk-space@main
        with:
          # 全て実行すると時間がかかるため、必要なものだけ指定
          android: true
          dotnet: false
          tool-cache: false
          haskell: false
          large-packages: false
          docker-images: false
          swap-storage: false

      - name: "リポジトリのチェックアウト"
        uses: actions/checkout@v4

      - name: "buildx のセットアップ"
        uses: docker/setup-buildx-action@v3

      - name: "kubectl のセットアップ"
        uses: azure/setup-kubectl@v4
        with:
          version: "v1.27.14"

      - name: "kind のセットアップ"
        uses: engineerd/setup-kind@v0.5.0
        with:
          version: v0.20.0

      - name: "Helm のセットアップ"
        uses: azure/setup-helm@v4.2.0
        with:
          version: v3.13.3

      - name: "kind クラスタの生成"
        run: |
          kind create cluster --name blog

      # PVC を利用するためにストレージ・プロビジョナーを作成しデフォルトストレージクラスに設定
      - name: "local-path-provisioner の適用"
        run: |
          kubectl apply -f https://raw.githubusercontent.com/rancher/local-path-provisioner/master/deploy/local-path-storage.yaml
          kubectl patch storageclass local-path \
            -p '{"metadata": {"annotations":{"storageclass.kubernetes.io/is-default-class":"true"}}}'

      - name: "metallb の適用"
        run: |
          make setup-metallb-for-kind

      - name: "ingress controller の適用"
        run: |
          make ingress-controller-install && \
          make ingress-controller-set-metallb && \
          make ingress-controller-default-set

      - name: "dns の設定"
        run: |
          make coredns-apply

      - name: "image の build"
        run: |
          docker image build -f containers/frontend/e2e/Dockerfile -t e2e:v0.0.0 .
          docker image build --target prod -f containers/backend/api/Dockerfile -t api:v0.0.0 .
          docker image build -f containers/backend/api-test/Dockerfile -t api-test:v0.0.0 .
          docker image build -f containers/db/postgres/Dockerfile -t postgres:v0.0.0 .
          docker image build --target prod -f containers/frontend/blog-admin/Dockerfile -t blog-admin:v0.0.0 .

      # docker image build --target prod -f containers/frontend/web/Dockerfile -t web:v0.0.0 .
      # 環境変数を設定したいので可読性を考慮して build-action を使っている
      - name: "web Image の Build"
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./containers/frontend/web/Dockerfile
          target: prod
          push: false
          load: true
          tags: |
            web:v0.0.0
          build-args: |
            NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME=${{ secrets.NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME }}
            NEXT_PUBLIC_CLOUDINARY_API_KEY=${{ secrets.NEXT_PUBLIC_CLOUDINARY_API_KEY }}
            CLOUDINARY_API_SECRET=${{ secrets.CLOUDINARY_API_SECRET }}

      - name: "image の load"
        run: |
          kind load docker-image web:v0.0.0 --name blog
          kind load docker-image api:v0.0.0 --name blog
          kind load docker-image api-test:v0.0.0 --name blog
          kind load docker-image postgres:v0.0.0 --name blog
          kind load docker-image e2e:v0.0.0 --name blog
          kind load docker-image blog-admin:v0.0.0 --name blog

      - name: "api シークレットを作成"
        run: |
          kubectl create secret generic api \
            --from-literal=user_password="${{ secrets.POSTGRES_PASSWORD }}"

      - name: "postgres シークレットを作成"
        run: |
          kubectl create secret generic postgres \
            --from-literal=database_url="${{ secrets.DATABASE_URL }}"

      - name: "Chart のインストール"
        run: |
          make helm-install

      - name: "e2e テストを実行する Deployment リソースが準備できるまで待機"
        run: |
          kubectl rollout status deployment/e2e --timeout=120s

      - name: "e2e テストを実行する Deployment リソースが準備できるまで待機"
        run: |
          kubectl rollout status deployment/e2e --timeout=120s

      - name: "api を扱う Deployment リソースが準備できるまで待機"
        run: |
          kubectl rollout status deployment/api --timeout=120s

      - name: "テスト対象の Deployment リソースが準備できるまで待機"
        run: |
          kubectl rollout status deployment/web --timeout=120s

      - name: "e2e テストを実行する"
        run: |
          make e2e-run-ci

      - name: "api テストを実行する"
        run: |
          make api-test-run

      - name: "kind クラスタを削除"
        run: |
          kind delete cluster --name blog
